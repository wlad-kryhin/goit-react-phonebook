{"version":3,"sources":["components/PhoneList/PhoneList.jsx","components/ContactForm/ContactForm.jsx","components/Filter/Filter.jsx","App.js","reportWebVitals.js","index.js","components/ContactForm/ContactForm.module.css","components/PhoneList/PhoneList.module.css","components/Filter/Filter.module.css"],"names":["PhoneList","list","onDelete","className","s","map","id","name","tel","text","number","button","type","onClick","ContactForm","submit","useState","setName","setTel","onSubmit","event","preventDefault","target","reset","form","label","input","value","placeholder","onChange","currentTarget","pattern","required","Filter","change","e","App","contacts","setContacts","filter","setFilter","useEffect","window","localStorage","setItem","JSON","stringify","filterContacts","normalizeFilter","toLocaleLowerCase","contact","includes","getFilterContacts","uuidv4","find","toLowerCase","alert","prevContacts","length","currentId","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.9233ef05.chunk.js","sourcesContent":["import PropTypes from \"prop-types\";\r\nimport s from \"./PhoneList.module.css\";\r\n\r\nexport default function PhoneList({ list, onDelete }) {\r\n  return (\r\n    <ul className={s.list}>\r\n      {list.map(({ id, name, tel }) => {\r\n        return (\r\n          <li key={id}>\r\n            <p className={s.text}>{name}</p>\r\n            <p className={s.number}>{tel}</p>\r\n            <button\r\n              className={s.button}\r\n              type=\"button\"\r\n              onClick={() => onDelete(id)}\r\n            >\r\n              Delete\r\n            </button>\r\n          </li>\r\n        );\r\n      })}\r\n    </ul>\r\n  );\r\n}\r\nPhoneList.propTypes = {\r\n  list: PropTypes.array,\r\n  onDelete: PropTypes.func,\r\n};\r\n","import { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport s from \"./ContactForm.module.css\";\r\n\r\nexport default function ContactForm({ submit }) {\r\n  const [name, setName] = useState(\"\");\r\n  const [tel, setTel] = useState(\"\");\r\n\r\n  const handleInputNameChange = (event) => {\r\n    setName(event.currentTarget.value);\r\n  };\r\n  const handleInputTelChange = (event) => {\r\n    setTel(event.currentTarget.value);\r\n  };\r\n\r\n  const handleFormSubmit = (event) => {\r\n    event.preventDefault();\r\n    submit(name, tel);\r\n    event.target.reset();\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleFormSubmit} className={s.form}>\r\n      <label className={s.label}>\r\n        Name\r\n        <input\r\n          type=\"text\"\r\n          name=\"name\"\r\n          className={s.input}\r\n          value={name}\r\n          placeholder=\"Name Surname\"\r\n          onChange={handleInputNameChange}\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          required\r\n        />\r\n      </label>\r\n      <label className={s.label}>\r\n        Tel\r\n        <input\r\n          type=\"tel\"\r\n          name=\"tel\"\r\n          className={s.input}\r\n          placeholder=\"774-333-22\"\r\n          onChange={handleInputTelChange}\r\n          value={tel}\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          required\r\n        />\r\n      </label>\r\n      <button type=\"submit\" className={s.button}>\r\n        Add contact\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n\r\nContactForm.propTypes = {\r\n  onSubmit: PropTypes.func.isRequired,\r\n};\r\n","import PropTypes from \"prop-types\";\r\nimport s from \"./Filter.module.css\";\r\n\r\nexport default function Filter({ value, change }) {\r\n  return (\r\n    <label className={s.label}>\r\n      Find contacts by name\r\n      <input\r\n        className={s.input}\r\n        type=\"text\"\r\n        value={value}\r\n        onChange={(e) => change(e.target.value)}\r\n        placeholder=\"Find contact...\"\r\n      />\r\n    </label>\r\n  );\r\n}\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string,\r\n  onChange: PropTypes.func,\r\n};\r\n","import { v4 as uuidv4 } from \"uuid\";\nimport \"./index.css\";\nimport { useState, useEffect } from \"react\";\nimport PhoneList from \"./components/PhoneList/PhoneList\";\nimport ContactForm from \"./components/ContactForm/ContactForm\";\nimport Filter from \"./components/Filter/Filter\";\n\nfunction App() {\n  const [contacts, setContacts] = useState([]);\n  const [filter, setFilter] = useState(\"\");\n\n  const handleContactDelete = (currentId) => {\n    setContacts(contacts.filter((contact) => contact.id !== currentId));\n  };\n\n  const handleFilterContacts = (event) => {\n    setFilter(event.target.value);\n  };\n  useEffect(() => {\n    window.localStorage.setItem(\"contacts\", JSON.stringify(contacts));\n  }, [contacts]);\n\n  const handleContactAdd = ({ name, tel }) => {\n    const contact = {\n      id: uuidv4(),\n      name,\n      tel,\n    };\n\n    if (\n      contacts.find(\n        (contact) => contact.name.toLowerCase() === name.toLowerCase(),\n      )\n    ) {\n      alert(`${name} is already in contacts.`);\n    } else if (contacts.find((contact) => contact.tel === tel)) {\n      alert(`${tel} is already in contacts.`);\n    } else {\n      setContacts((prevContacts) => [...prevContacts, contact]);\n    }\n  };\n  const getFilterContacts = () => {\n    const normalizeFilter = filter.toLocaleLowerCase();\n\n    return contacts.filter((contact) =>\n      contact.name.toLocaleLowerCase().includes(normalizeFilter),\n    );\n  };\n\n  const filterContacts = getFilterContacts();\n  return (\n    <div className=\"container\">\n      <h1>PhoneBooks</h1>\n      <ContactForm submit={handleContactAdd} />\n      <h2>Contacts</h2>\n      {contacts.length > 1 && (\n        <Filter value={filter} change={handleFilterContacts} />\n      )}\n      {contacts.length > 0 ? (\n        <PhoneList list={filterContacts} onDelete={handleContactDelete} />\n      ) : (\n        <p>You are don*t have a contact</p>\n      )}\n    </div>\n  );\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__149n0\",\"label\":\"ContactForm_label__Jz_-A\",\"input\":\"ContactForm_input__2jJOh\",\"button\":\"ContactForm_button__2boEC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"PhoneList_list__1CCYv\",\"button\":\"PhoneList_button__2yuuR\",\"text\":\"PhoneList_text__2FR8l\",\"number\":\"PhoneList_number__NbllH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Filter_input__2Yg4M\",\"label\":\"Filter_label__3ycbO\"};"],"sourceRoot":""}